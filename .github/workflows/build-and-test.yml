
name: BUILD-AND-TEST-DEV-TESTING

on:
  push:
    branches: [ "main", "master", "Development" ]
  pull_request:
    branches: [ "main", "master", "Development"]

jobs:
  build:
    name: Build, test and publish UNIT TEST results to Testmo
    runs-on: ubuntu-latest

    steps:
    - name: Branch Check (on develop branch!)
      id: branch_check
      run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "{env_name}={Production}" >> $GITHUB_STATE
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "{env_name}={Production}" >> $GITHUB_STATE
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "{env_name}={Development}" >> $GITHUB_STATE
          else
            echo "{env_name}={Development}" >> $GITHUB_STATE
          fi         
    - name: Environment Selected
      run: echo "Environment will be ${{ steps.branch_check.outputs.env_name }}"
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore & Build
      run: |
       dotnet restore
       dotnet build --no-restore
    - name: Test and Reporting
      run: |
        echo "we are working on ENV (env_name): ${{ steps.branch_check.outputs.env_name }}"
        RUN_NAME=$(TZ=':Australia/Melbourne' date '+%Y%m%d-%H:%M-API-Unit-Tests')
        npm ci 
        npm install --no-save @testmo/testmo-cli
        npx testmo automation:run:submit \
            --instance "$TESTMO_URL" \
            --project-id 1 \
            --name "$RUN_NAME" \
            --source "api-unit-tests" \
            --results **/*unit-test-output.xml \
            -- dotnet test --no-build --verbosity normal --logger:"junit;LogFilePath=unit-test-output.xml"
      env:
        TESTMO_URL: ${{ vars.TESTMO_URL }}
        TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
    - name: Run Selenium Tests (in other repo)
      uses: saragamage/trigger-workflow-and-wait@master
      with:
        owner: ${{ vars.CROSS_REPO_OWNER }}
        repo: ${{ vars.CROSS_REPO_REPO }}
        github_token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN_PERM_SEL_TEST_PROJ }}
        workflow_file_name: ${{ vars.CROSS_REPO_WF_FILE }}
        ref: main
        wait_interval: 15
        client_payload: '{"env_name": "${{ steps.branch_check.outputs.env_name }}", "release_version": "${{ github.sha }}" }'
        propagate_failure: false
        trigger_workflow: true
        wait_workflow: true

    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}
